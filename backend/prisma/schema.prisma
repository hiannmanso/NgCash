generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounts {
  id                                                    Int            @id(map: "accounts_pk") @default(autoincrement())
  balance                                               Int            @default(100)
  transactions_accountsTotransactions_debitedAccountId  transactions[] @relation("accountsTotransactions_debitedAccountId")
  transactions_accountsTotransactions_creditedAccountId transactions[] @relation("accountsTotransactions_creditedAccountId")
  users                                                 users?
}

model transactions {
  id                                                Int      @id(map: "transactions_pk") @default(autoincrement())
  debitedAccountId                                  Int
  creditedAccountId                                 Int
  value                                             Int
  createdAt                                         DateTime @default(now())
  accounts_accountsTotransactions_debitedAccountId  accounts @relation("accountsTotransactions_debitedAccountId", fields: [debitedAccountId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transactions_fk0") 
  accounts_accountsTotransactions_creditedAccountId accounts @relation("accountsTotransactions_creditedAccountId", fields: [creditedAccountId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transactions_fk1")
}

model users {
  id        Int      @id(map: "users_pk") @default(autoincrement())
  username  String   @unique
  password  String
  accountId Int      @unique
  accounts  accounts @relation(fields: [accountId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_fk0")
}
